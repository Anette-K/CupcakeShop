@model CupcakeShop.Core.Models.Order

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="pages-text">
    <div class="pages-title">
        <h2>Checkout</h2>
    </div>
    <div class="contacts-container">
        <div class="text contacts-text product-list-admin-view edit-text" style="width:300px;">
            <div class="checkout-container back-admin-container">
                <a href="@Url.Action("Index", "Basket")" class="btn btn-checkout">Back to Basket</a>
            </div>
            <h3 style="text-align:left; margin-top:50px">Almost there!</h3>
            <p>
                Enter your details so we can ship our delicious cupcakes as quickly as possible!
            </p>
        </div>
        <div class="text contacts-text container mt-5 contacts-map">
            <div class="col-md-6" style="max-width:70%;">
                <div class="list-group admin-text">

                    <div class="form-horizontal">
                        <h4>Order</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group form-group-checkout">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group form-group-checkout">
                            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group form-group-checkout">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group form-group-checkout">
                            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group form-group-checkout">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group form-group-checkout">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group form-group-checkout">
                            @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group form-group-checkout">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Proceed To Payment" class="btn btn-checkout" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
                    }

                    <div>

                        @Html.ActionLink("Back to Basket", "Index")
                    </div>
